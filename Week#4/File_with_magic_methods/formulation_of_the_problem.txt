Файл із магічними методами.

У цьому завдання вам потрібно створити інтерфейс для роботи з файлами. Інтерфейс повинен надавати такі можливості роботи з файлами:
- читання з файлу, метод read повертає рядок із поточним змістом файлу
- запис у файл, метод write приймає як аргумент рядок з новим змістом файлу
- додавання об'єктів типу File, результатом додавання є об'єкт класу File, при цьому створюється новий файл і файловий об'єкт, в якому
вміст другого файлу додається до першого файлу. Новий файл повинен створюватись у директорії, отриманій за допомогою функції
tempfile.gettempdir. Для отримання нового шляху можна використати os.path.join.
- повертати в якості рядкового представлення об'єкта класу File повний шлях до файлу
- підтримувати протокол ітерації, причому ітерація проходить рядками файлу

При створенні екземпляра класу File у конструктор передається повний шлях до файлу на файловій системі. Якщо файлу з таким шляхом немає,
він повинен бути створений при ініціалізації.

Приклад роботи:

>>> import os.path
>>> from solution import File
>>> path_to_file = 'some_filename'
>>> os.path.exists(path_to_file)
False
>>> file_obj = File(path_to_file)
>>> os.path.exists(path_to_file)
True
>>> print(file_obj)
some_filename
>>> file_obj.read()
''
>>> file_obj.write('some text')
9
>>> file_obj.read()
'some text'
>>> file_obj.write('other text')
10
>>> file_obj.read()
'other text'
>>> file_obj_1 = File(path_to_file + '_1')
>>> file_obj_2 = File(path_to_file + '_2')
>>> file_obj_1.write('line 1\n')
7
>>> file_obj_2.write('line 2\n')
7
>>> new_file_obj = file_obj_1 + file_obj_2
>>> isinstance(new_file_obj, File)
True
>>> print(new_file_obj)
C:\Users\Media\AppData\Local\Temp\71b9e7b695f64d85a7488f07f2bc051c
>>> for line in new_file_obj:
....    print(ascii(line))
'line 1\n'
'line 2\n'
>>> new_path_to_file = str(new_file_obj)
>>> os.path.exists(new_path_to_file)
True
>>> file_obj_3 = File(new_path_to_file)
>>> print(file_obj_3)
C:\Users\Media\AppData\Local\Temp\71b9e7b695f64d85a7488f07f2bc051c
>>>
