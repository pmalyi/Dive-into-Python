Тест по неделе
Оцінюваний тест. • 30 min. • Загалом доступно 14 балів.Загалом 14 балів

Термін до12 бер р., 23:59 EET
1.
Питання 1
Системный вызов fork(check box)

1 бал

используется для создания дочернего процесса


используется для вызова функций в отдельных потоках


создает точную копию родительского процесса


используется для получения pid родительского процесса

2.
Питання 2
Системный вызов fork(check box)

1 бал

в родительском процессе вызов fork возвращает pid дочернего


в дочернем процессе вызов fork возвращает 0


в дочернем процессе вызов fork возвращает pid родительского процесса


в родительском процессе вызов fork возвращает 0

3.
Питання 3
Что происходит с памятью в дочернем процессе при работе с Python?(radio button)

1 бал

Копируется из родительского процесса


Разделяется с родительским процессом

4.
Питання 4
Файловые дескрипторы в дочернем процессе(check box)

1 бал

будут переоткрыты Python интерпретатором автоматически


будут недоступны, их нужно переоткрыть заново


будут скопированы и переоткрыты


будут скопированы

5.
Питання 5
Выделить истинные выражения:(check box)

1 бал

блокировки нужно брать в одном порядке, освобождать в произвольном


блокировки нужно брать в одном порядке, освобождать строго в том же порядке


предпочтительнее использовать контекстный менеджер для работы с блокировками в Python


блокировки нужно брать в одном порядке, освобождать в обратном

6.
Питання 6
Очереди замедляют процесс работы потоков Python, лучше использовать объекты блокировки(radio button)

1 бал

Нет


Да

7.
Питання 7
Выделить истинные выражения:(check box)

1 бал

GIL никак не влияет на выполнение отдельных процессов на Python3


GIL запрещает одновременное выполнение инструкций байткода в разных потоках


GIL нужен для защиты памяти интерпретатора от разрушений


GIL замедляет выполнение главного потока управления в Python3, даже если нет других потоков

8.
Питання 8
Если программа на Python выполняет много операций ввода вывода (IO-bound), то для ускорения ее работы нужно(radio button)

1 бал

разбить ее на отдельные функции, выполнить их в потоках


создать отдельные процессы

9.
Питання 9
Если программа на Python выполняет операции вычисления, требующие только CPU (CPU-bound), то для ускорения ее работы нужно(radio button)

1 бал

разбить ее на отдельные функции, выполнить их в потоках


создать отдельные процессы

10.
Питання 10
Генератор в Python – это(check box)

1 бал

инструкция yield


функция в которой присутствует инструкция yield


специальный вызов yield from


объект типа concurrent.futures.Future

11.
Питання 11
Отметить все истинные утверждения:(check box)

1 бал

итератор хранит значение для генерации следующего элемента последовательности в self


генератор хранит значение для генерации следующего элемента последовательности в локальных переменных


итератор прерывает свое выполнение на каждой итерации, сохраняя состояние локальных переменных


исключение StopIteration используется для остановки работы итератора

12.
Питання 12
Отметить все истинные утверждения:(check box)

1 бал

сопрограммы исполняются в отдельных потоках параллельно


сопрограмма может прерывать свою работу, сохраняя свое состояние и значения всех локальных переменных


из одной сопрограммы можно вызвать другую при помощи yield from


исключения нельзя обрабатывать в сопрограммах, это нужно делать в основном потоке

13.
Питання 13
Отметить все истинные утверждения, касающиеся asyncio event loop:(check box)

1 бал

позволяет выполнять функции и callable Python объекты


выполняет несколько корутин параллельно в разных потоках


позволяет выполнять корутины, зарегистрированные в нем


переключает контекст между Python-потоками


выполняет все корутины последовательно, переключая контекст между ними


отвечает за выделение памяти в основном процессе

14.
Питання 14
Отметить все истинные утверждения:(check box)

1 бал

объект типа asyncio.Task хранит в себе связанную корутину и содержит статус ее выполнения


блокирующий код в Python никак не повлияет на выполнение других корутин в asyncio event loop


объект типа asyncio.Task выполняется в отдельном потоке управления, никак не влияя на выполнения других объектов типа asyncio.Task


из объектов типа asyncio.Future можно создавать цепочки и дожидаться их выполнения в asyncio event loop